
#Использовать 1commands
#Использовать fs

Процедура Подготовить() Экспорт

	ИменаПроектов = Новый Массив();
	ИменаПроектов.Добавить("OneScriptCompressor");

	ИменаФайловБиблиотек = Новый Соответствие();
	ИменаФайловБиблиотек.Вставить("1script_compressor.dll");

	ИменаФайловБиблиотек.Вставить("EasyCompressor.dll");
	ИменаФайловБиблиотек.Вставить("EasyCompressor.Snappier.dll");
	ИменаФайловБиблиотек.Вставить("EasyCompressor.LZ4.dll");
	ИменаФайловБиблиотек.Вставить("EasyCompressor.ZstdSharp.dll");
	
	ИменаФайловБиблиотек.Вставить("BrotliSharpLib.dll", "net4");
	ИменаФайловБиблиотек.Вставить("Snappier.dll");
	ИменаФайловБиблиотек.Вставить("ZstdSharp.dll");
	ИменаФайловБиблиотек.Вставить("K4os.Compression.LZ4.dll");
	ИменаФайловБиблиотек.Вставить("K4os.Compression.LZ4.Streams.dll");
	ИменаФайловБиблиотек.Вставить("K4os.Hash.xxHash.dll");

	ИменаФайловБиблиотек.Вставить("System.Memory.dll", "net4");
	ИменаФайловБиблиотек.Вставить("System.Buffers.dll", "net4");
	ИменаФайловБиблиотек.Вставить("System.Runtime.CompilerServices.Unsafe.dll", "net4");
	ИменаФайловБиблиотек.Вставить("System.Threading.Tasks.Extensions.dll", "net4");

	СобратьБиблиотекуDotNET(ИменаПроектов);
	ПодготовитьКаталогСКомпонентами(ИменаПроектов, ИменаФайловБиблиотек);
	ПроверитьНаличиеБиблиотекиDotNET(ИменаФайловБиблиотек);

КонецПроцедуры

Процедура СобратьБиблиотекуDotNET(ИменаПроектов)

	Для Каждого ИмяПроекта Из ИменаПроектов Цикл
		
		КаталогРелиза = ОбъединитьПути(ТекущийКаталог(), "src/" + ИмяПроекта + "/bin/Release");
		ФС.ОбеспечитьПустойКаталог(КаталогРелиза);

		Команда = Новый Команда;
		Команда.УстановитьСтрокуЗапуска(СтрШаблон("dotnet build src/%1 -c Release", ИмяПроекта));
		Команда.ПоказыватьВыводНемедленно(Истина);
		Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);
		
		КодВозврата = Команда.Исполнить();
		Если Не КодВозврата = 0 Тогда
			ВызватьИсключение "Не удалось выполнить сборку .NET библиотеки";
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура ПодготовитьКаталогСКомпонентами(ИменаПроектов, ИменаФайловБиблиотек)

	СоответствиеПапок = Новый Соответствие();
	СоответствиеПапок.Вставить("net4", "net48");
	СоответствиеПапок.Вставить("dotnet", "net6.0");
	
	КаталогСКомпонентами = ОбъединитьПути(ТекущийКаталог(), "Components");

	ФС.ОбеспечитьПустойКаталог(КаталогСКомпонентами);

	Для Каждого Соответствие Из СоответствиеПапок Цикл
		ИмяКаталогаOscript = Соответствие.Ключ;
		ИмяКаталогаDotnet = Соответствие.Значение;

		ПутьККаталгуOscript = ОбъединитьПути(КаталогСКомпонентами, ИмяКаталогаOscript);
		ФС.ОбеспечитьПустойКаталог(ПутьККаталгуOscript);

		Для Каждого ИмяПроекта Из ИменаПроектов Цикл
			ПутьККаталгуDotnet = ОбъединитьПути(ТекущийКаталог(), "src/" + ИмяПроекта + "/bin/Release", ИмяКаталогаDotnet);

			Для Каждого Строка Из ИменаФайловБиблиотек Цикл
				ИмяФайла = Строка.Ключ;
				ПутьИсточник = ОбъединитьПути(ПутьККаталгуDotnet, ИмяФайла);
				ПутьПриемник = ОбъединитьПути(ПутьККаталгуOscript, ИмяФайла);

				Если ФС.ФайлСуществует(ПутьИсточник) Тогда
					ПереместитьФайл(ПутьИсточник, ПутьПриемник);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура ПроверитьНаличиеБиблиотекиDotNET(ИменаФайловБиблиотек)

	Для Каждого ИмяПапки Из СтрРазделить("net4,dotnet", ",") Цикл
		Для Каждого Строка Из ИменаФайловБиблиотек Цикл
			
			ИмяФайла = Строка.Ключ; 
			ИмяЦелевойПапки = Строка.Значение;

			Если ЗначениеЗаполнено(ИмяЦелевойПапки) И ИмяЦелевойПапки <> ИмяПапки Тогда
				Продолжить;
			КонецЕсли;

			ПутьКФайлу = ОбъединитьПути(ТекущийКаталог(), "Components", ИмяПапки, ИмяФайла);
			Если Не ФС.ФайлСуществует(ПутьКФайлу) Тогда
				ВызватьИсключение СтрШаблон("Отсутсвует .NET библиотека %1 в папке Components/%2", ИмяФайла, ИмяПапки);
			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

КонецПроцедуры